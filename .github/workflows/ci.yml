name: CI

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Allow manual trigger

env:
  CARGO_TERM_COLOR: always

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Add rustfmt
        run: rustup component add rustfmt
      - name: Run fmt
        run: cargo fmt --all -- --check

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: mold clang pkg-config
            libx11-dev libasound2-dev libudev-dev libxkbcommon-x11-0
            libwayland-dev libxkbcommon-dev
          version: 1.0
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          shared-key: "ci-build-${{ hashFiles('**/Cargo.lock') }}"
      - name: Build
        run: cargo build --locked --release

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: mold clang pkg-config
            libx11-dev libasound2-dev libudev-dev libxkbcommon-x11-0
            libwayland-dev libxkbcommon-dev
          version: 1.0
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci-build-${{ hashFiles('**/Cargo.lock') }}"
      - name: Run tests
        run: cargo test --locked --release

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: mold clang pkg-config
            libx11-dev libasound2-dev libudev-dev libxkbcommon-x11-0
            libwayland-dev libxkbcommon-dev
          version: 1.0
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "ci-build-${{ hashFiles('**/Cargo.lock') }}"
      - name: Add clippy
        run: rustup component add clippy
      - name: Run clippy
        env:
          RUSTFLAGS: "-Dwarnings"
        run: |
          cargo clippy --locked --release --all-targets -- --no-deps
